# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 'development'
  pull_request:
    branches: 'development'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Clone repository
          uses: actions/checkout@v2
        - name: Use Node.js 12.x
          uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - name: Install dependencies
          run: yarn install 
        - name: Generate build
          run: yarn run build
        # Share artifact inside workflow
        - name: Share artifact inside workflow
          uses: actions/upload-artifact@v1
          with:
            name: react-github-actions-build
            path: build
            
    copy-artifact:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "tests/a.txt,tests/b.txt"
          target: "test"
    
    deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
          # Download previously shared build
        - name: Get artifact
          uses: actions/download-artifact@v1
          with:
            name: react-github-actions-build
          # Set the credentials from repository settings/secrets
        - name: Deploy to Digital Ocean droplet via SSH action
          uses: appleboy/ssh-action@v0.1.3
          with:
            HOST: ${{ secrets.SSH_HOST }}
            USERNAME: ${{ secrets.SSH_USERNAME }}
            KEY: ${{ secrets.SSH_KEY }}
            envs: IMAGE_NAME,CONTAINER_NAME,SERVICE_NAME
            script: |
              # Copy artifact
              docker stop $(echo $CONTAINER_NAME)
              # Remove old container
             
