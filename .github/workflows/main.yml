# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: ['development']
  pull_request:
    branches: ['development']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Clone repository
          uses: actions/checkout@v2

        - name: Use Node.js 16.x
          uses: actions/setup-node@v1
          with:
            node-version: 16.x

        - name: Remove yarn.lock
          run: rm -rf yarn.lock

        - name: Clean Cache
          run: yarn cache clean

        - name: Install dependencies
          run: yarn install --frozen-lockfile 

        - name: Generate build
          run: CI=false yarn run build
          
        # - name: Check Build folder
        #   run: ls ./build

        - name: Copy file via ssh key
          uses: appleboy/scp-action@master  
          env:
            HOST: ${{ secrets.SSH_HOST }}
            USERNAME: ${{ secrets.SSH_USERNAME }}
            KEY: ${{ secrets.SSH_KEY }}
          with:
            source: "./build/*"
            target: "~/"
            strip_components: 1

        # Share artifact inside workflow
        # - name: Share artifact inside workflow
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: scart_web_${{ github.sha }}
        #     path: ./build
    deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
        # - name: Create Build director
        #   run: mkdir ~/build

        # - name: Download artifact inside workflow
        #   uses: actions/download-artifact@v2
        #   with:
        #     name: scart_web_${{ github.sha }}
        #     path: ~/build
          
        # - name: Compress build
        #   run: tar -cvf ~/build.tar ~/build
          
        # - name: Check Build folder
        #   run: ls ~/
            
        # - name: Copy file via ssh key
        #   run: scp -i ${{ secrets.SSH_KEY }} -r /home/runner/build ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/opt/www/
        #   # uses: appleboy/scp-action@master  
        #   # env:
        #   #   HOST: ${{ secrets.SSH_HOST }}
        #   #   USERNAME: ${{ secrets.SSH_USERNAME }}
        #   #   KEY: ${{ secrets.SSH_KEY }}
        #   # with:
        #   #   source: "/home/runner/build"
        #   #   target: "/var/opt/www"
        #   #   strip_components: 1

        - name: Deploy to Digital Ocean droplet via SSH action
          uses: appleboy/ssh-action@v0.1.3
          with:
            HOST: ${{ secrets.SSH_HOST }}
            USERNAME: ${{ secrets.SSH_USERNAME }}
            KEY: ${{ secrets.SSH_KEY }}
            envs: IMAGE_NAME,CONTAINER_NAME,SERVICE_NAME
            script: |
              # Go to app directory
              cd /var/opt/www
              
              # Remove old files
              rm -rf build 
              
              # Copy build to directory
              mv ~/build/* ./
